name: Hotfix Deployment (macOS)

on:
  push:
    branches: [ hotfix/* ]

jobs:
  hotfix-deploy:
    name: Hotfix Build and Deploy
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Fix Docker credentials for macOS
      run: |
        echo "🔧 Fixing Docker credentials for GitHub Actions..."
        mkdir -p ~/.docker
        cat > ~/.docker/config.json << 'EOF'
        {
          "auths": {},
          "credsStore": ""
        }
        EOF
        echo "✅ Docker credentials configuration updated"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Create emergency backup
      run: |
        echo "🚨 Creating emergency backup for hotfix deployment..."
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        
        # Backup current images if they exist
        if docker images | grep -q golfleaguemanager.*backend; then
          BACKEND_ID=$(docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}" | grep "golfleaguemanager.*backend" | head -1 | awk '{print $3}')
          docker tag $BACKEND_ID golfleaguemanager_backend_hotfix_backup:$TIMESTAMP
          echo "✅ Backend hotfix backup: golfleaguemanager_backend_hotfix_backup:$TIMESTAMP"
        fi
        
        if docker images | grep -q golfleaguemanager.*frontend; then
          FRONTEND_ID=$(docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}" | grep "golfleaguemanager.*frontend" | head -1 | awk '{print $3}')
          docker tag $FRONTEND_ID golfleaguemanager_frontend_hotfix_backup:$TIMESTAMP
          echo "✅ Frontend hotfix backup: golfleaguemanager_frontend_hotfix_backup:$TIMESTAMP"
        fi

    - name: Quick build and deploy
      run: |
        echo "🔥 Performing hotfix deployment..."
        echo "Branch: ${{ github.ref_name }}"
        
        # Stop current services
        docker compose down
        
        # Build and start with hotfix changes
        docker compose up -d --build
        
        echo "⏳ Waiting for services to start..."
        sleep 30

    - name: Wait for database
      run: |
        echo "⏳ Waiting for PostgreSQL to be ready..."
        for i in {1..60}; do
          if docker exec golfleague_postgres pg_isready -U golfuser; then
            echo "✅ PostgreSQL is ready!"
            break
          fi
          echo "⏳ Attempt $i/60: PostgreSQL not ready, waiting 2 seconds..."
          sleep 2
        done

    - name: Run migrations
      run: |
        echo "🗄️ Running database migrations..."
        chmod +x ./scripts/database/migrate-all-tenants.sh
        ./scripts/database/migrate-all-tenants.sh

    - name: Verify hotfix deployment
      run: |
        echo "🔍 Verifying hotfix deployment..."
        chmod +x ./scripts/deployment/verify-deployment.sh
        ./scripts/deployment/verify-deployment.sh

    - name: Hotfix deployment complete
      run: |
        echo "🎉 Hotfix deployment completed successfully!"
        echo "🔥 Hotfix branch: ${{ github.ref_name }}"
        echo "Frontend: http://localhost:4500"
        echo "Backend: http://localhost:5505"
        echo "⚠️  Remember to merge this hotfix back to main and develop branches"
