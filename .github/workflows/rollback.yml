name: Emergency Rollback

on:
  workflow_dispatch:
    inputs:
      rollback_type:
        description: 'Type of rollback'
        required: true
        default: 'quick'
        type: choice
        options:
        - quick
        - specific
        - backup_only
      backend_backup:
        description: 'Backend backup tag (for specific rollback)'
        required: false
        type: string
      frontend_backup:
        description: 'Frontend backup tag (for specific rollback)'
        required: false
        type: string
      reason:
        description: 'Reason for rollback'
        required: true
        type: string

jobs:
  emergency-rollback:
    name: Emergency Rollback
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Fix Docker credentials for macOS
      run: |
        echo "🔧 Fixing Docker credentials for GitHub Actions..."
        mkdir -p ~/.docker
        cat > ~/.docker/config.json << 'EOF'
        {
          "auths": {},
          "credsStore": ""
        }
        EOF
        echo "✅ Docker credentials configuration updated"

    - name: Display rollback info
      run: |
        echo "🚨 Emergency Rollback Initiated"
        echo "Type: ${{ github.event.inputs.rollback_type }}"
        echo "Reason: ${{ github.event.inputs.reason }}"
        echo "Initiated by: ${{ github.actor }}"
        echo "Timestamp: $(date)"

    - name: Create emergency backup
      if: github.event.inputs.rollback_type != 'backup_only'
      run: |
        chmod +x ./scripts/deployment/rollback-deployment.sh
        ./scripts/deployment/rollback-deployment.sh backup

    - name: List available backups
      run: |
        echo "📋 Available backup images:"
        ./scripts/deployment/rollback-deployment.sh list

    - name: Quick rollback
      if: github.event.inputs.rollback_type == 'quick'
      run: |
        echo "🔄 Performing quick rollback..."
        ./scripts/deployment/rollback-deployment.sh quick

    - name: Specific rollback
      if: github.event.inputs.rollback_type == 'specific'
      run: |
        echo "🔄 Performing specific rollback..."
        if [ -z "${{ github.event.inputs.backend_backup }}" ] || [ -z "${{ github.event.inputs.frontend_backup }}" ]; then
          echo "❌ Both backend and frontend backup tags must be provided for specific rollback"
          exit 1
        fi
        ./scripts/deployment/rollback-deployment.sh rollback "${{ github.event.inputs.backend_backup }}" "${{ github.event.inputs.frontend_backup }}"

    - name: Backup only
      if: github.event.inputs.rollback_type == 'backup_only'
      run: |
        echo "📦 Creating backup only (no rollback)..."
        ./scripts/deployment/rollback-deployment.sh backup

    - name: Verify rollback
      if: github.event.inputs.rollback_type != 'backup_only'
      run: |
        echo "🔍 Verifying rollback deployment..."
        chmod +x ./scripts/deployment/verify-deployment.sh
        ./scripts/deployment/verify-deployment.sh

    - name: Rollback complete
      run: |
        echo "✅ Emergency rollback completed!"
        echo "Type: ${{ github.event.inputs.rollback_type }}"
        echo "Reason: ${{ github.event.inputs.reason }}"
        echo "Status: $([ '${{ github.event.inputs.rollback_type }}' = 'backup_only' ] && echo 'Backup created' || echo 'Rollback successful')"
        echo ""
        echo "⚠️  Remember to:"
        echo "1. Investigate the issue that caused the rollback"
        echo "2. Fix the problem in the code"
        echo "3. Test thoroughly before the next deployment"
