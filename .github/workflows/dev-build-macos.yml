name: Development Build (macOS)

on:
  push:
    branches: [ develop, feature/* ]
  pull_request:
    branches: [ develop ]

jobs:
  test-only:
    name: Test and Build Check
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Start test database
      run: |
        echo "üóÑÔ∏è Starting test database for development build..."
        # Stop any existing test database
        docker stop dev-test-postgres || true
        docker rm dev-test-postgres || true
        
        # Start new test database
        docker run -d \
          --name dev-test-postgres \
          -p 5434:5432 \
          -e POSTGRES_USER=golfuser \
          -e POSTGRES_PASSWORD=golfpassword \
          -e POSTGRES_DB=golfdb_test \
          postgres:16
        
        # Wait for database to be ready
        echo "‚è≥ Waiting for database to be ready..."
        timeout 60 bash -c 'until docker exec dev-test-postgres pg_isready -U golfuser; do sleep 2; done'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps

    - name: Build frontend (development)
      working-directory: ./frontend
      run: npm run build

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm run test -- --watch=false --browsers=ChromeHeadless

    - name: Restore .NET dependencies
      working-directory: ./backend
      run: dotnet restore

    - name: Build .NET application
      working-directory: ./backend
      run: dotnet build --no-restore --configuration Debug

    - name: Run backend tests
      working-directory: ./backend
      run: dotnet test --no-build --configuration Debug
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Port=5434;Database=golfdb_test;Username=golfuser;Password=golfpassword"

    - name: Cleanup test database
      if: always()
      run: |
        echo "üßπ Cleaning up test database..."
        docker stop dev-test-postgres || true
        docker rm dev-test-postgres || true

    - name: Development Build Complete
      run: |
        echo "‚úÖ Development build and tests completed successfully!"
        echo "üìù This was a validation build for branch: ${{ github.ref_name }}"
        echo "Ready for merge to main branch."
